version: '3.8'
services:
  app:
    build: .
    command: sleep infinity
    volumes:
      - .:/app
    environment:
      HELIUM_DATABASE_URL: postgres://dbuser:dbpwd@localhost:5432/appdb
      HASURA_GRAPHQL_ADMIN_SECRET: aFyrZOSGqAj2Eob5lNWz
      HASURA_GRAPHQL_GRAPHQL_URL: http://localhost:8080/v1/graphql
      AUTH_SERVER_URL: http://localhost:4000
    network_mode: host
  database:
    image: postgres:15.2
    ports:
    - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpwd
      POSTGRES_DB: appdb
    network_mode: host
  hasura:
    image: hasura/graphql-engine:v2.23.0
    ports:
    - "8080:8080"
    depends_on:
    - database
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://dbuser:dbpwd@localhost:5432/appdb
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: aFyrZOSGqAj2Eob5lNWz
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key":"5152fa850c02dc222631cca898ed1485821a70912a6e3649c49076912daa3b62182ba013315915d64f40cddfbb8b58eb5bd11ba225336a6af45bbae07ca873f3","issuer":"hasura-auth"}'
    restart: unless-stopped
    network_mode: host
  auth:
    image: akshaya01/hasura-auth-authuser-mod:0.19.2
    depends_on:
      - database
      - hasura
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: aFyrZOSGqAj2Eob5lNWz
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key":"5152fa850c02dc222631cca898ed1485821a70912a6e3649c49076912daa3b62182ba013315915d64f40cddfbb8b58eb5bd11ba225336a6af45bbae07ca873f3","issuer":"hasura-auth"}'
      HASURA_GRAPHQL_DATABASE_URL: postgres://dbuser:dbpwd@localhost:5432/appdb 
      HASURA_GRAPHQL_GRAPHQL_URL: http://localhost:8080/v1/graphql
      AUTH_SMTP_HOST: localhost
      AUTH_SMTP_PORT: 1025
      AUTH_SMTP_PASS: password
      AUTH_SMTP_USER: user
      AUTH_SMTP_SECURE: 'false'
      AUTH_SMTP_SENDER: hasura-auth@example.com
      # development
      AUTH_EMAIL_SIGNIN_EMAIL_VERIFIED_REQUIRED: 'false'
    # volumes:
    #   - ./email-templates:/app/email-templates
    ports:
      - '4000:4000'
    network_mode: host
  mailhog:
    image: mailhog/mailhog
    environment:
      SMTP_HOST: localhost
      SMTP_PORT: 1025
      SMTP_PASS: password
      SMTP_USER: user
      SMTP_SECURE: 'false'
      SMTP_SENDER: hasura-auth@example.com
      # SMTP_PASS: ${AUTH_SMTP_PASS}
      # SMTP_USER: ${AUTH_SMTP_USER}
      # SMTP_SECURE: '${AUTH_SMTP_SECURE}'
      # SMTP_SENDER: ${AUTH_SMTP_SENDER}
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    volumes:
      - mailhog-data:/maildir
    network_mode: host

volumes:
  database-data:
  mailhog-data: